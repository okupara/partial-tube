type User {
  id: ID!
  name: String!
  status: String!
}

type PartialVideo {
  id: ID!
  start: Int!
  end: Int!
  comment: String
  title: String!
  uid: String!
  videoId: String!
  created: Int!
}
input VideoInput {
  videoId: String!
  title: String!
  start: Float!
  end: Float!
  comment: String
  playlists: [String!]
}

type Playlist {
  id: ID!
  numOfVideos: Int!
  name: String!
  comment: String
  permission: String!
  created: Int!
  totalSec: Int!
  videos: [PartialVideo]!
}

input PlaylistInput {
  name: String!
  permission: String!
  comment: String
}

type YouTubeVideo {
  id: ID!
  title: String!
  description: String
}

type Query {
  viewer: User!
  playlist(id: String!): Playlist
  playlists: [Playlist]
  youtubeVideo(videoId: String!): YouTubeVideo
}

type Mutation {
  addPlaylist(playlist: PlaylistInput): Playlist
  addVideo(video: VideoInput): PartialVideo
}
